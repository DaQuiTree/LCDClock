C51 COMPILER V8.08   TIME                                                                  05/31/2017 16:25:24 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE TIME
OBJECT MODULE PLACED IN ..\output\time.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\time.c BROWSE DEBUG OBJECTEXTEND PRINT(.\time.lst) OBJECT(..\outp
                    -ut\time.obj)

line level    source

   1          #define _TIME_C
   2          #include "config.h"
   3          #include "ds1302.h"
   4          #include "lcd12864.h"
   5          #include "lunar.h"
   6          #include "DHT11.h"
   7          #include "keyboard.h"
   8          #include "main.h"
   9          
  10          uint8 pSec = 0xAA;
  11          uint8 pDay = 0xAA;
  12          uint8 pHour = 0xAA; //时钟的初始值
  13          
  14          uint8 cHour = 0x00;
  15          uint8 cMin = 0x00; //闹钟初始值
  16          
  17          struct sTime timeBuf; //存储着十进制时间
  18          
  19          uint8 curPos = 0;
  20          bit bClockOpen = 0;
  21          
  22          uint8 code DateMap[12][2] = {
  23                  {1,31},{2,28},{3,31},{4,30},{5,31},{6,30},
  24                  {7,31},{8,31},{9,30},{10,31},{11,30},{12,31}
  25          };
  26          
  27          uint16 code weekCN[8][2] = {
  28                  {0x0000,0x0000},{0xD6DC,0xD2BB},
  29                  {0xD6DC,0xB6FE},{0xD6DC,0xC8FD},
  30                  {0xD6DC,0xCBC4},{0xD6DC,0xCEE5},
  31                  {0xD6DC,0xC1F9},{0xD6DC,0xC8D5}
  32          };      /*空、周一~周日*/
  33          
  34          void ClearInforArea()  //清空屏幕下三行,保留标题栏
  35          {
  36   1              uint8 i;
  37   1      
  38   1              for(i = 0; i < 3; i++)
  39   1              {
  40   2                      LCDClearArea(0,i+1);
  41   2              }
  42   1      }
  43          
  44          void ShowCurrentTime()
  45          {
  46   1              uint16 pdata tStr[8];
  47   1              uint8  pdata dStr[16];
  48   1              uint16 pdata dSplit;
  49   1      
  50   1              DS1302BurstRead(&timeMod); 
  51   1              if(pSec != timeMod.sec)
  52   1              {
  53   2                      pSec = timeMod.sec;
  54   2                      tStr[0] = (timeMod.hour >> 4) + 0xA3B0; //时高
C51 COMPILER V8.08   TIME                                                                  05/31/2017 16:25:24 PAGE 2   

  55   2                      tStr[1] = (timeMod.hour & 0x0F) + 0xA3B0;//时低
  56   2                      tStr[2] = 0xA1C3;//时间分隔符
  57   2                      tStr[3] = (timeMod.min >> 4) + 0xA3B0;  //分高
  58   2                      tStr[4] = (timeMod.min & 0x0F) + 0xA3B0;//分低
  59   2                      tStr[5] = 0xA1C3;//时间分隔符
  60   2                      tStr[6] = (timeMod.sec >> 4) + 0xA3B0;  //秒高
  61   2                      tStr[7] = (timeMod.sec & 0x0F) + 0xA3B0;//秒低 
  62   2                      LCDShowCN(0,3,tStr,8);//液晶第1行显示日期时间
  63   2                      if(pHour != timeMod.hour){
  64   3                              pHour = timeMod.hour;
  65   3                              if(timeMod.hour >= 0x08 && timeMod.hour <= 0x18)        //若在白天，显示太阳图标
  66   3                              {
  67   4                                      LCDDrawArea(5,0,sunImage);
  68   4                              }else{    //若在黑夜，显示月亮图标
  69   4                                      LCDDrawArea(5,0,moonImage);
  70   4                              }
  71   3                      }
  72   2              }
  73   1      
  74   1              if(pDay != timeMod.day) //若日期改变了
  75   1              {
  76   2                      pDay = timeMod.day;       //更新日期
  77   2                      dStr[0] = ' ';
  78   2                      dStr[1] = ' ';
  79   2                      dStr[2] = '2';
  80   2                      dStr[3] = '0';
  81   2                      dStr[4] = (timeMod.year >> 4) + '0';    //年高
  82   2                      dStr[5] = (timeMod.year & 0x0F) + '0';//年低
  83   2                      dStr[6] = ' ';
  84   2                      dStr[7] = ' ';
  85   2                      dStr[8] = (timeMod.month >> 4) + '0';   //月高
  86   2                      dStr[9] = (timeMod.month & 0x0F) + '0';//月低
  87   2                      dStr[10] = ' ';
  88   2                      dStr[11] = ' ';
  89   2                      dStr[12] = (timeMod.day >> 4) + '0';    //日高
  90   2                      dStr[13] = (timeMod.day & 0x0F) + '0';//日低
  91   2                      dSplit = 0xA1A4;
  92   2      
  93   2                      LCDShowStr(0,1,dStr,14);//液晶第2行显示日期时间
  94   2                      LCDShowCN(3,1,&dSplit,1);
  95   2                      LCDShowCN(5,1,&dSplit,1);       //显示日期分隔符
  96   2                      LCDShowCN(3,2,weekCN[timeMod.week],2);  //液晶第3行显示星期
  97   2      
  98   2              }  
  99   1      }
 100          
 101          void ShowTemp()
 102          {
 103   1              uint8 temp,humi;
 104   1              uint16 dat[3];
 105   1      
 106   1              DHT11GetData(&humi, &temp);
 107   1              
 108   1              dat[0] = temp/10 + 0xA3B0;
 109   1              dat[1] = temp%10 + 0xA3B0;
 110   1              dat[2] = 0xA1E6; 
 111   1              LCDShowCN(3,1,dat,3);  //温度
 112   1      
 113   1              dat[0] = humi/10 + 0xA3B0;
 114   1              dat[1] = humi%10 + 0xA3B0;
 115   1              dat[2] = 0xA3A5; 
 116   1              LCDShowCN(3,2,dat,3);  //湿度
C51 COMPILER V8.08   TIME                                                                  05/31/2017 16:25:24 PAGE 3   

 117   1      }
 118          
 119          void ShowInfo()
 120          {
 121   1              uint16 pdata lunar[7];
 122   1              uint8 pdata lunarLen, lday, lyear, lmonth;
 123   1              uint16 code iPrompt[3][3] ={
 124   1                      {0xCEC2,0xB6C8,0xA3BA},
 125   1                      {0xCAAA,0xB6C8,0xA3BA},
 126   1                      {0xC4D6,0xD6D3,0xA3BA}
 127   1              };
 128   1              
 129   1              LCDClearAll();    //清除显示区域
 130   1              LCDShowCN(0,1,iPrompt[0],3);  //p温度：
 131   1              LCDShowCN(0,2,iPrompt[1],3);  //p湿度：
 132   1              LCDShowCN(0,3,iPrompt[2],3);  //p闹钟：
 133   1              ShowTemp();                                //显示数值
 134   1              lyear = (timeMod.year >> 4) * 10 + (timeMod.year & 0x0F);
 135   1              lmonth = (timeMod.month >> 4) * 10 + (timeMod.month & 0x0F);
 136   1              lday = (timeMod.day >> 4) * 10 + (timeMod.day & 0x0F); 
 137   1              lunarLen = GetLunarDate(lyear, lmonth, lday, lunar);
 138   1              LCDShowCN(1,0,lunar,lunarLen);
 139   1      }
 140          
 141          void RightShiftDate()
 142          {
 143   1              switch(curPos)
 144   1              {
 145   2                      case 0: LCDSetCursor(4,1);break;
 146   2                      case 1: LCDSetCursor(6,1);break;
 147   2                      case 2: LCDSetCursor(4,2);break;
 148   2                      case 3: LCDSetCursor(1,3);break;
 149   2                      case 4: LCDSetCursor(4,3);break;
 150   2                      case 5: LCDSetCursor(7,3);break;
 151   2                      case 6: LCDSetCursor(5,0);break;
 152   2                      case 7: LCDSetCursor(2,1);break;
 153   2                      default: break;
 154   2              }
 155   1              curPos++;
 156   1              if(curPos > 7) curPos = 0;
 157   1      }
 158          
 159          void RightShiftClock()
 160          {
 161   1              switch(curPos)
 162   1              {
 163   2                      case 0: LCDSetCursor(6,2);break;
 164   2                      case 1: LCDSetCursor(6,0);break;
 165   2                      case 2: LCDSetCursor(3,2);break;
 166   2                      default: break;
 167   2              }
 168   1              curPos++;
 169   1              if(curPos > 2) curPos = 0;      
 170   1      }
 171          
 172          void SaveTime()
 173          {
 174   1              timeMod.year = (timeMod.year << 4) | timeBuf.year/10;   //BCD高位
 175   1              timeMod.year = (timeMod.year << 4) | timeBuf.year%10;   //BCD低位
 176   1      
 177   1              timeMod.month = (timeMod.month << 4) | timeBuf.month/10;        //BCD高位
 178   1              timeMod.month = (timeMod.month << 4) | timeBuf.month%10;        //BCD低位
C51 COMPILER V8.08   TIME                                                                  05/31/2017 16:25:24 PAGE 4   

 179   1      
 180   1              timeMod.day = (timeMod.day << 4) | timeBuf.day/10;      //BCD高位
 181   1              timeMod.day = (timeMod.day << 4) | timeBuf.day%10;      //BCD低位
 182   1      
 183   1              timeMod.week = (timeMod.week << 4) | timeBuf.week/10;   //BCD高位
 184   1              timeMod.week = (timeMod.week << 4) | timeBuf.week%10;   //BCD低位
 185   1      
 186   1              timeMod.hour = (timeMod.hour << 4) | timeBuf.hour/10;   //BCD高位
 187   1              timeMod.hour = (timeMod.hour << 4) | timeBuf.hour%10;   //BCD低位
 188   1      
 189   1              timeMod.min = (timeMod.min << 4) | timeBuf.min/10;      //BCD高位
 190   1              timeMod.min = (timeMod.min << 4) | timeBuf.min%10;      //BCD低位
 191   1      
 192   1              timeMod.sec = (timeMod.sec << 4) | timeBuf.sec/10;      //BCD高位
 193   1              timeMod.sec = (timeMod.sec << 4) | timeBuf.sec%10;      //BCD低位
 194   1      
 195   1              DS1302BurstWrite(&timeMod);
 196   1      }
 197          
 198          void ShowAdjusted()                               
 199          {
 200   1              uint8 pdata strTmp[2];
 201   1              uint16 pdata CNTmp[2];
 202   1      
 203   1              if(mMode == SetDate)
 204   1              {
 205   2                      if(curPos < 7){
 206   3                              LCDClearArea(5,0);
 207   3                              LCDDrawArea(5,0,SaveButton); //数据已修改，保存图标复原 
 208   3                      }
 209   2                      switch(curPos){
 210   3                              case 0:
 211   3                                      strTmp[0] = (timeBuf.year /10) + '0';
 212   3                                      strTmp[1] = (timeBuf.year %10) + '0';
 213   3                                      LCDShowStr(2,1,strTmp,2);
 214   3                                      LCDSetCursor(2,1);       //Cursor保持不动
 215   3                                      break;
 216   3                              case 1:
 217   3                                      strTmp[0] = (timeBuf.month /10) + '0';
 218   3                                      strTmp[1] = (timeBuf.month %10) + '0';
 219   3                                      LCDShowStr(4,1,strTmp,2);
 220   3                                      LCDSetCursor(4,1);       //Cursor保持不动
 221   3                                      break;
 222   3                              case 2:
 223   3                                      strTmp[0] = (timeBuf.day /10) + '0';
 224   3                                      strTmp[1] = (timeBuf.day %10) + '0';
 225   3                                      LCDShowStr(6,1,strTmp,2);
 226   3                                      LCDSetCursor(6,1);       //Cursor保持不动
 227   3                                      break;
 228   3                              case 3:
 229   3                                      LCDShowCN(3,2,weekCN[timeBuf.week],2);
 230   3                                      LCDSetCursor(4,2);       //Cursor保持不动
 231   3                                      break;                  
 232   3                              case 4:
 233   3                                      CNTmp[0] = (timeBuf.hour /10) + 0xA3B0;
 234   3                                      CNTmp[1] = (timeBuf.hour %10) + 0xA3B0;
 235   3                                      LCDShowCN(0,3,CNTmp,2);
 236   3                                      LCDSetCursor(1,3);       //Cursor保持不动
 237   3                                      break;
 238   3                              case 5:
 239   3                                      CNTmp[0] = (timeBuf.min /10) + 0xA3B0;
 240   3                                      CNTmp[1] = (timeBuf.min %10) + 0xA3B0;
C51 COMPILER V8.08   TIME                                                                  05/31/2017 16:25:24 PAGE 5   

 241   3                                      LCDShowCN(3,3,CNTmp,2);
 242   3                                      LCDSetCursor(4,3);       //Cursor保持不动
 243   3                                      break;
 244   3                              case 6:
 245   3                                      CNTmp[0] = (timeBuf.sec /10) + 0xA3B0;
 246   3                                      CNTmp[1] = (timeBuf.sec %10) + 0xA3B0;
 247   3                                      LCDShowCN(6,3,CNTmp,2);
 248   3                                      LCDSetCursor(7,3);       //Cursor保持不动
 249   3                                      break;
 250   3                              case 7:                                 //保存图标更改为已保存
 251   3                                      CNTmp[0] = 0xA1CC;
 252   3                                      LCDClearImage(5,0);
 253   3                                      LCDShowCN(5,0,CNTmp,1);
 254   3                                      LCDSetCursor(5,0);
 255   3                              default: break;
 256   3                      }
 257   2              }else if(mMode == SetClock){
 258   2                      switch(curPos){
 259   3                              case 0:
 260   3                                      CNTmp[0] = (cHour / 10) + 0xA3B0;
 261   3                                      CNTmp[1] = (cHour % 10) + 0xA3B0;
 262   3                                      LCDShowCN(2,2,CNTmp,2);
 263   3                                      LCDSetCursor(3,2);       //Cursor保持不动
 264   3                                      break;
 265   3                              case 1:
 266   3                                      CNTmp[0] = (cMin / 10) + 0xA3B0;
 267   3                                      CNTmp[1] = (cMin % 10) + 0xA3B0;
 268   3                                      LCDShowCN(5,2,CNTmp,2);
 269   3                                      LCDSetCursor(6,2);       //Cursor保持不动
 270   3                                      break;
 271   3                              case 2:
 272   3                                      if(bClockOpen){
 273   4                                              LCDDrawArea(6,0,OpenVolume);//显示开启闹钟图标
 274   4                                      }else{
 275   4                                              LCDDrawArea(6,0,StopVolume);//显示关闭闹钟图标
 276   4                                      }
 277   3                                      break;
 278   3                              default: break;
 279   3                      }
 280   2              }               
 281   1      }
 282          
 283          void AdjustDate()
 284          {
 285   1              switch(curPos)
 286   1              {
 287   2                      case 0:                 //调整年
 288   2                              timeBuf.year++;
 289   2                              if(timeBuf.year > 99) timeBuf.year = 0;
 290   2                              break;
 291   2                      case 1:                  //调整月
 292   2                              timeBuf.month++;
 293   2                              if(timeBuf.month > 12) timeBuf.month = 1;
 294   2                              break;
 295   2                      case 2:                 //日
 296   2                              timeBuf.day++;
 297   2                              if(timeBuf.year % 4 == 0){      //闰年二月单独处理
 298   3                                      if(timeBuf.month == 2){
 299   4                                              if(timeBuf.day > 29) timeBuf.day = 1;
 300   4                                              break;
 301   4                                      }; 
 302   3                              }
C51 COMPILER V8.08   TIME                                                                  05/31/2017 16:25:24 PAGE 6   

 303   2                              if(timeBuf.day > DateMap[timeBuf.month-1][1]) timeBuf.day = 1;
 304   2                              break;
 305   2                      case 3:            //周
 306   2                              timeBuf.week++;
 307   2                              if(timeBuf.week > 7) timeBuf.week = 1;
 308   2                              break;
 309   2                      case 4:            //时
 310   2                              timeBuf.hour++;
 311   2                              if(timeBuf.hour > 23) timeBuf.hour = 0;
 312   2                              break;
 313   2                      case 5:            //分
 314   2                              timeBuf.min++;
 315   2                              if(timeBuf.min > 59) timeBuf.min = 0;
 316   2                              break;
 317   2                      case 6:            //秒
 318   2                              timeBuf.sec++;
 319   2                              if(timeBuf.sec > 59) timeBuf.sec = 0;
 320   2                              break;
 321   2                      case 7:
 322   2                              SaveTime();
 323   2                              break;
 324   2                      default: break;
 325   2              }
 326   1              ShowAdjusted();
 327   1      }
 328          
 329          void AdjustClock()
 330          {
 331   1              switch(curPos)
 332   1              {
 333   2                      case 0:                 //调整Clock时
 334   2                              cHour++;
 335   2                              if(cHour > 23) cHour = 0;
 336   2                              break;
 337   2                      case 1:                  //调整Clock分
 338   2                              cMin++;
 339   2                              if(cMin > 59) cMin = 0;
 340   2                              break;
 341   2                      case 2:   //是否开启闹钟
 342   2                              bClockOpen = ~bClockOpen;
 343   2                              break;
 344   2                              
 345   2                      default: break;
 346   2              }
 347   1              ShowAdjusted();
 348   1      }
 349          
 350          void GetDecimalTime()
 351          {
 352   1              timeBuf.year = (timeMod.year >> 4)*10 + (timeMod.year & 0x0F);
 353   1              timeBuf.month = (timeMod.month >> 4)*10 + (timeMod.month & 0x0F);
 354   1              timeBuf.day = (timeMod.day >> 4)*10 + (timeMod.day & 0x0F);
 355   1              timeBuf.week =  timeMod.week;
 356   1              timeBuf.hour = (timeMod.hour >> 4)*10 + (timeMod.hour & 0x0F);
 357   1              timeBuf.min = (timeMod.min >> 4)*10 + (timeMod.min & 0x0F);
 358   1              timeBuf.sec = (timeMod.sec >> 4)*10 + (timeMod.sec & 0x0F);
 359   1      }
 360          
 361          void KeyAction(uint8 keyCode)
 362          {
 363   1              if(keyCode == 0x0D)//按回车键进入设定状态
 364   1              {
C51 COMPILER V8.08   TIME                                                                  05/31/2017 16:25:24 PAGE 7   

 365   2                      uint16 pdata clockStr[5];
 366   2      
 367   2                      if(mMode == SetDate){
 368   3                              mMode = SetClock;
 369   3                              LCDClearAll();
 370   3                              LCDShowCN(0,0,"闹钟设定：",5);
*** WARNING C182 IN LINE 370 OF ..\SOURCE\TIME.C: pointer to different objects
 371   3                              LCDClearImage(5,0);      //清除其余图标
 372   3                              if(bClockOpen)  //Clock是否开启？
 373   3                              {
 374   4                                      LCDDrawArea(6,0,OpenVolume);
 375   4                              }else{
 376   4                                      LCDDrawArea(6,0,StopVolume);
 377   4                              }
 378   3                              clockStr[0] = (cHour >> 4) + 0xA3B0;
 379   3                              clockStr[1] = (cHour & 0x0F) + 0xA3B0;
 380   3                              clockStr[2] = 0xA1C3;
 381   3                              clockStr[3] = (cMin >> 4) + 0xA3B0;
 382   3                              clockStr[4] = (cMin & 0x0F) + 0xA3B0;            //“00:00”
 383   3                              LCDShowCN(2,2,clockStr,5);
 384   3                              curPos = 0;
 385   3                              LCDSetCursor(3,2);
 386   3                              LCDShowCursor();
 387   3                      }else{
 388   3                              mMode = SetDate;
 389   3                              LCDClearAll();
 390   3                              clockStr[0] = 0xD0A3;
 391   3                              clockStr[1]     = 0xCAB1;
 392   3                              LCDShowCN(2,0,clockStr,2);//为节省内存借clockStr一用
 393   3                              LCDClearImage(5,0);
 394   3                              LCDDrawArea(5,0,SaveButton);
 395   3                              pSec = 0xAA;
 396   3                              pDay = 0xAA; //强制刷新时间界面（不刷新太阳月亮图标）
 397   3                              ShowCurrentTime();
 398   3                              GetDecimalTime();//将BCD时间转换为十进制时间
 399   3                              curPos = 0;
 400   3                              LCDSetCursor(2,1);
 401   3                              LCDShowCursor();
 402   3                              
 403   3                      }
 404   2              }else if(keyCode == 0x1B){//取消
 405   2      
 406   2              }else if(keyCode == 0x26){//向上
 407   2                      if(mMode == SetDate){
 408   3                              AdjustDate();
 409   3                      }else if(mMode == SetClock){
 410   3                              AdjustClock();
 411   3                      }               
 412   2              }else if(keyCode == 0x27){//向右、翻页
 413   2                      if(mMode < SetDate) //处于信息展示状态时翻页
 414   2                      {
 415   3                              mMode++;
 416   3                              mMode &= 0x01;//改变mMode状态
 417   3                              if(mMode == ReadDate){ //时间界面
 418   4                                      LCDClearAll();  //清屏
 419   4                                      pSec = 0xAA;    //强制显示时间
 420   4                                      pDay = 0xAA;
 421   4                                      pHour = 0xAA;
 422   4                              }else if(mMode == ReadInfo){//温度等信息界面
 423   4                                      ShowInfo();
 424   4                              }
 425   3                      }else{   //处于设定状态右键相当于调整设定位置
C51 COMPILER V8.08   TIME                                                                  05/31/2017 16:25:24 PAGE 8   

 426   3                              if(mMode == SetDate){
 427   4                                      RightShiftDate();
 428   4                              }else if(mMode == SetClock){
 429   4                                      RightShiftClock();
 430   4                              }
 431   3                      }               
 432   2              }
 433   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2295    ----
   CONSTANT SIZE    =     85    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      68
   DATA SIZE        =     14      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
