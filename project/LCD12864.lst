C51 COMPILER V8.08   LCD12864                                                              06/11/2017 19:05:47 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN ..\output\LCD12864.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\LCD12864.c BROWSE DEBUG OBJECTEXTEND PRINT(.\LCD12864.lst) OBJECT
                    -(..\output\LCD12864.obj)

line level    source

   1          #define _LCD12864_C
   2          #include "config.h"
   3          #include "lcd12864.h"
   4          
   5          uint8 code clockImage[32] ={
   6                  0x00,0x00,0x00,0x00,0x18,0x30,0x33,0x98,0x6F,0xEC,0x58,0x34,0x11,0x10,0x31,0x18,
   7                  0x31,0x18,0x31,0xD8,0x10,0x10,0x18,0x30,0x0F,0xE0,0x07,0xC0,0x1C,0x70,0x00,0x00,
   8          };
   9          
  10          uint8 code sunImage[32] = {
  11                  0x00,0x00,0x01,0x00,0x41,0x04,0x20,0x08,0x13,0x90,0x07,0xC0,0x0F,0xE0,0xDF,0xF6,
  12                  0x1F,0xF0,0x0F,0xE0,0x07,0xC0,0x13,0x90,0x20,0x08,0x41,0x04,0x01,0x00,0x00,0x00,
  13          };
  14          
  15          uint8 code moonImage[32] = {
  16                  0x00,0x00,0x07,0x80,0x03,0xC0,0x01,0xE0,0x01,0xF0,0x00,0xF8,0x00,0xF8,0x00,0xF8,
  17                  0x00,0xF8,0x00,0xF8,0x01,0xF0,0x03,0xF0,0x07,0xE0,0x0F,0xC0,0x1F,0x00,0x00,0x00,
  18          };
  19          
  20          uint8 code SaveButton[32] ={
  21                  0x00,0x00,0x7F,0xFE,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,
  22                  0x7F,0xFE,0x7F,0xFE,0x60,0x1E,0x6C,0x1E,0x6C,0x1E,0x6C,0x1E,0x60,0x1E,0x7F,0xFE,
  23          };
  24          
  25          uint8 code OpenVolume[32]={
  26                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x01,0xC0,0x03,0x60,0x06,0x30,0x04,0x10,
  27                  0x04,0x10,0x0C,0x18,0x18,0x0C,0x3F,0xFE,0x01,0x40,0x00,0x80,0x00,0x00,0x00,0x00,
  28          };
  29          
  30          uint8 code StopVolume[32]={
  31                  0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x80,0x19,0xC0,0x0F,0x60,0x06,0x30,0x07,0x30,
  32                  0x05,0x90,0x0C,0xD8,0x18,0x6C,0x3F,0xFE,0x01,0x58,0x00,0x8C,0x00,0x06,0x00,0x00,
  33          };
  34          
  35          uint8 code ReverseDat[16] ={//用于翻转字节的静态数据
  36                  0x00,0x08,0x04,0x0C,0x02,0x0A,0x06,0x0E,0x01,0x09,0x05,0x0D,0x03,0x0B,0x07,0x0F
  37          };
  38          
  39          uint8 ReverseByte(uint8 c)
  40          {
  41   1          uint8 d = 0;
  42   1      
  43   1          d |= (ReverseDat[c&0xF]) << 4;
  44   1          d |= ReverseDat[c>>4];
  45   1      
  46   1          return d;
  47   1      }
  48          
  49          void LCDWaitReady()
  50          {
  51   1              uint8 tmp = 0xFF;
  52   1      
  53   1              LCD12864_RS = 0;
  54   1              LCD12864_RW = 1;
C51 COMPILER V8.08   LCD12864                                                              06/11/2017 19:05:47 PAGE 2   

  55   1              do{
  56   2                      LCD12864_EN = 1;
  57   2                      tmp = LCD12864_DB & 0x01; //由于DB接反进行改动 0x80 -> 0x01
  58   2                      LCD12864_EN = 0;        
  59   2              }while(tmp != 0x00);
  60   1              LCD12864_EN = 0;        
  61   1      }
  62          
  63          void LCDWriteCmd(uint8 cmd)
  64          {
  65   1              cmd = ReverseByte(cmd);
  66   1              LCDWaitReady();
  67   1              LCD12864_RS = 0;
  68   1              LCD12864_RW = 0;
  69   1              LCD12864_EN = 1;
  70   1              LCD12864_DB = cmd;
  71   1              LCD12864_EN = 0;        
  72   1      }
  73          
  74          void LCDWriteData(uint8 dat)
  75          {
  76   1              dat = ReverseByte(dat);
  77   1              LCDWaitReady();
  78   1              LCD12864_RS = 1;
  79   1              LCD12864_RW = 0;
  80   1              LCD12864_EN = 1;
  81   1              LCD12864_DB = dat;
  82   1              LCD12864_EN = 0;
  83   1      }
  84          
  85          void InitLCD12864()
  86          {
  87   1              LCDWriteCmd(0x30);
  88   1              LCDWriteCmd(0x0C);
  89   1              LCDWriteCmd(0x01); //清屏，(0,0)位置字符设定成空格
  90   1              LCDShowStr(0,0," ",1);
  91   1      }
  92          
  93          void LCDShowStr(uint8 x, uint8 y, uint8* str, uint8 strlen)     //写入字符串
  94          {
  95   1              LCDSetCursor(x,y);
  96   1              do{
  97   2                      LCDWriteData(*str++);
  98   2                      strlen--;       
  99   2              }while(strlen > 0);
 100   1      }
 101          
 102          void LCDShowCN(uint8 x, uint8 y, uint16* str, uint8 strlen)     //写入字符串
 103          {
 104   1              uint8 msb,lsb;
 105   1      
 106   1              while(strlen-- > 0){
 107   2                      LCDSetCursor(x,y);
 108   2                      x++;
 109   2                      if(x > 7){
 110   3                              x = 0;
 111   3                              y++;
 112   3                      }                       //先写入地址
 113   2                      msb = (uint8)(*str >> 8);       //写入数据
 114   2                      lsb = (uint8)(*str); 
 115   2                      LCDWriteData(msb);
 116   2                      LCDWriteData(lsb);
C51 COMPILER V8.08   LCD12864                                                              06/11/2017 19:05:47 PAGE 3   

 117   2                      str++;                                          
 118   2              }
 119   1      }
 120          
 121          void LCDSetCursor(uint8 x, uint8 y)
 122          {
 123   1              uint8 pos = 0;
 124   1      
 125   1              switch(y)
 126   1              {
 127   2                      case 0:
 128   2                              pos = 0x80 + x;
 129   2                              break;
 130   2                      case 1:
 131   2                              pos = 0x90 + x;
 132   2                              break;
 133   2                      case 2:
 134   2                              pos = 0x88 + x;
 135   2                              break;
 136   2                      case 3:
 137   2                              pos = 0x98 + x;
 138   2                              break;
 139   2                      default:
 140   2                              break;
 141   2              }
 142   1              LCDWriteCmd(pos);
 143   1      }
 144          
 145          void LCDShowCursor()
 146          {
 147   1              LCDWriteCmd(0x0F);
 148   1      }
 149          
 150          void LCDCancelCursor()
 151          {
 152   1              LCDWriteCmd(0x0C);
 153   1      }
 154          
 155          void LCDClearAll()
 156          {
 157   1              LCDWriteCmd(0x30);
 158   1              LCDWriteCmd(0x01);
 159   1              LCDShowStr(0,0," ",1);
 160   1      }
 161          
 162          void LCDShowImage(uint8* image)
 163          {
 164   1              uint8 i,j;
 165   1      
 166   1              LCDWriteCmd(0x34); //扩充指令集设定关闭绘图显示
 167   1              LCDWriteCmd(0x34);
 168   1              for(i = 0; i < 32; i++){
 169   2                      LCDWriteCmd(0x80 | i); //设置绘图垂直地址
 170   2                      LCDWriteCmd(0x80);
 171   2                      for( j = 0; j < 8; j++)
 172   2                      {
 173   3                              LCDWriteData(*image++);
 174   3                              LCDWriteData(*image++);
 175   3                      }
 176   2              }
 177   1              
 178   1              for(i = 0; i < 32; i++){
C51 COMPILER V8.08   LCD12864                                                              06/11/2017 19:05:47 PAGE 4   

 179   2                      LCDWriteCmd(0x80 | i); //设置绘图垂直地址
 180   2                      LCDWriteCmd(0x88);
 181   2                      for( j = 0; j < 8; j++)
 182   2                      {
 183   3                              LCDWriteData(*image++);
 184   3                              LCDWriteData(*image++);
 185   3                      }
 186   2              }       
 187   1              LCDWriteCmd(0x36); //打开绘图显示
 188   1              LCDWriteCmd(0x30);      //进入基本指令操作
 189   1      }
 190          
 191          void LCDDrawArea(uint8 x, uint8 y, uint8* image)//显示16*16图片
 192          {
 193   1              uint8 i;
 194   1      
 195   1              LCDWriteCmd(0x34); //扩充指令集设定关闭绘图显示
 196   1              LCDWriteCmd(0x34);
 197   1      
 198   1              if(y < 2){                      //处于前两行
 199   2                      for(i = 0; i < 16; i++){
 200   3                              LCDWriteCmd((0x80 | y*16)|i); //设置绘图垂直地址
 201   3                              LCDWriteCmd(0x80 | x);//设置绘图水平地址
 202   3      
 203   3                              LCDWriteData(*image++);// 写入一行
 204   3                              LCDWriteData(*image++);
 205   3                      }
 206   2              }else{                  //处于后两行
 207   2                      for(i = 0; i < 16; i++){
 208   3                              LCDWriteCmd((0x80 | y*16)|i); //设置绘图垂直地址
 209   3                              LCDWriteCmd(0x88 | x);//设置绘图水平地址
 210   3      
 211   3                              LCDWriteData(*image++);// 写入一行
 212   3                              LCDWriteData(*image++);
 213   3                      }
 214   2              }
 215   1      
 216   1              LCDWriteCmd(0x80 | y*16); //归于原点
 217   1              LCDWriteCmd(0x80 | x);
 218   1      
 219   1              LCDWriteCmd(0x36);
 220   1              LCDWriteCmd(0x30);
 221   1      }
 222          
 223          void LCDInitImage()
 224          {
 225   1              uint8 i,j;
 226   1      
 227   1              LCDWriteCmd(0x34); //扩充指令集设定关闭绘图显示
 228   1              LCDWriteCmd(0x34);
 229   1              for(i = 0; i < 32; i++){
 230   2                      LCDWriteCmd(0x80 | i); //设置绘图垂直地址
 231   2                      LCDWriteCmd(0x80);
 232   2                      for( j = 0; j < 8; j++)
 233   2                      {
 234   3                              LCDWriteData(0x00);
 235   3                              LCDWriteData(0x00);
 236   3                      }
 237   2              }
 238   1              
 239   1              for(i = 0; i < 32; i++){
 240   2                      LCDWriteCmd(0x80 | i); //设置绘图垂直地址
C51 COMPILER V8.08   LCD12864                                                              06/11/2017 19:05:47 PAGE 5   

 241   2                      LCDWriteCmd(0x88);
 242   2                      for( j = 0; j < 8; j++)
 243   2                      {
 244   3                              LCDWriteData(0x00);
 245   3                              LCDWriteData(0x00);
 246   3                      }
 247   2              }       
 248   1              LCDWriteCmd(0x36);
 249   1              LCDWriteCmd(0x30);              
 250   1      }
 251          
 252          void LCDClearImage(uint8 x, uint8 y)
 253          {
 254   1              uint8 i;
 255   1      
 256   1              LCDWriteCmd(0x34); //扩充指令集设定关闭绘图显示
 257   1              LCDWriteCmd(0x34);
 258   1      
 259   1              if(y < 2){                      //处于前两行
 260   2                      for(i = 0; i < 16; i++){
 261   3                              LCDWriteCmd((0x80 | y*16)|i); //设置绘图垂直地址
 262   3                              LCDWriteCmd(0x80 | x);//设置绘图水平地址
 263   3      
 264   3                              LCDWriteData(0x00);// 写入一行
 265   3                              LCDWriteData(0x00);
 266   3                      }
 267   2              }else{                  //处于后两行
 268   2                      for(i = 0; i < 16; i++){
 269   3                              LCDWriteCmd((0x80 | y*16)|i); //设置绘图垂直地址
 270   3                              LCDWriteCmd(0x88 | x);//设置绘图水平地址
 271   3      
 272   3                              LCDWriteData(0x00);// 写入一行
 273   3                              LCDWriteData(0x00);
 274   3                      }
 275   2              }
 276   1      
 277   1              LCDWriteCmd(0x80 | y*16); //归于原点
 278   1              LCDWriteCmd(0x80 | x);
 279   1      
 280   1              LCDWriteCmd(0x36);
 281   1              LCDWriteCmd(0x30);      
 282   1      }
 283          
 284          void LCDClearArea(uint8 x, uint8 y)
 285          {
 286   1              uint16 code clearDat[] = {
 287   1                      0xA1A0,0xA1A0,0xA1A0,0xA1A0,0xA1A0,0xA1A0,0xA1A0,0xA1A0,
 288   1              };
 289   1      
 290   1              LCDShowCN(x,y,clearDat,8-x);
 291   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    832    ----
   CONSTANT SIZE    =    226    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V8.08   LCD12864                                                              06/11/2017 19:05:47 PAGE 6   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
