C51 COMPILER V8.08   LCD12864                                                              05/31/2017 12:37:33 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN ..\output\LCD12864.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\LCD12864.c BROWSE DEBUG OBJECTEXTEND PRINT(.\LCD12864.lst) OBJECT
                    -(..\output\LCD12864.obj)

line level    source

   1          #define _LCD12864_C
   2          #include "config.h"
   3          #include "lcd12864.h"
   4          
   5          uint8 code clockImage[32] ={
   6                  0x3C,0x1C,0x7C,0x1E,0xFF,0xFF,0xFF,0xFF,0xFE,0x3F,0xF9,0x8F,0x79,0x8E,0x71,0x86,
   7                  0x71,0xF6,0x71,0xF6,0x78,0x0E,0x38,0x0E,0x3E,0x3C,0x1F,0xFC,0x1F,0xFC,0x1C,0x1C,
   8          };
   9          
  10          uint8 code sunImage[32] = {
  11                  0x00,0x00,0x01,0x00,0x41,0x04,0x20,0x08,0x13,0x90,0x07,0xC0,0x0F,0xE0,0xDF,0xF6,
  12                  0x1F,0xF0,0x0F,0xE0,0x07,0xC0,0x13,0x90,0x20,0x08,0x41,0x04,0x01,0x00,0x00,0x00,
  13          };
  14          
  15          uint8 code moonImage[32] = {
  16                  0x00,0x00,0x07,0x80,0x03,0xC0,0x01,0xE0,0x01,0xF0,0x00,0xF8,0x00,0xF8,0x00,0xF8,
  17                  0x00,0xF8,0x00,0xF8,0x01,0xF0,0x03,0xF0,0x07,0xE0,0x0F,0xC0,0x1F,0x00,0x00,0x00,
  18          };
  19          
  20          uint8 code SaveButton[32] ={
  21                  0x00,0x00,0x7F,0xFE,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,
  22                  0x7F,0xFE,0x7F,0xFE,0x60,0x1E,0x6C,0x1E,0x6C,0x1E,0x6C,0x1E,0x60,0x1E,0x7F,0xFE,
  23          };
  24          
  25          void LCDWaitReady()
  26          {
  27   1              uint8 tmp = 0xFF;
  28   1      
  29   1              LCD12864_RS = 0;
  30   1              LCD12864_RW = 1;
  31   1              do{
  32   2                      LCD12864_EN = 1;
  33   2                      tmp = LCD12864_DB & 0x80;
  34   2                      LCD12864_EN = 0;        
  35   2              }while(tmp != 0x00);
  36   1              LCD12864_EN = 0;        
  37   1      }
  38          
  39          void LCDWriteCmd(uint8 cmd)
  40          {
  41   1              LCDWaitReady();
  42   1              LCD12864_RS = 0;
  43   1              LCD12864_RW = 0;
  44   1              LCD12864_EN = 1;
  45   1              LCD12864_DB = cmd;
  46   1              LCD12864_EN = 0;        
  47   1      }
  48          
  49          void LCDWriteData(uint8 dat)
  50          {
  51   1              LCDWaitReady();
  52   1              LCD12864_RS = 1;
  53   1              LCD12864_RW = 0;
  54   1              LCD12864_EN = 1;
C51 COMPILER V8.08   LCD12864                                                              05/31/2017 12:37:33 PAGE 2   

  55   1              LCD12864_DB = dat;
  56   1              LCD12864_EN = 0;
  57   1      }
  58          
  59          void InitLCD12864()
  60          {
  61   1              LCDWriteCmd(0x30);
  62   1              LCDWriteCmd(0x0C);
  63   1              LCDWriteCmd(0x01); //清屏，(0,0)位置字符设定成空格
  64   1              LCDShowStr(0,0," ",1);
  65   1      }
  66          
  67          void LCDShowStr(uint8 x, uint8 y, uint8* str, uint8 strlen)     //写入字符串
  68          {
  69   1              LCDSetCursor(x,y);
  70   1              do{
  71   2                      LCDWriteData(*str++);
  72   2                      strlen--;       
  73   2              }while(strlen > 0);
  74   1      }
  75          
  76          void LCDShowCN(uint8 x, uint8 y, uint16* str, uint8 strlen)     //写入字符串
  77          {
  78   1              uint8 msb,lsb;
  79   1      
  80   1              while(strlen-- > 0){
  81   2                      LCDSetCursor(x,y);
  82   2                      x++;
  83   2                      if(x > 7){
  84   3                              x = 0;
  85   3                              y++;
  86   3                      }                       //先写入地址
  87   2                      msb = (uint8)(*str >> 8);       //写入数据
  88   2                      lsb = (uint8)(*str); 
  89   2                      LCDWriteData(msb);
  90   2                      LCDWriteData(lsb);
  91   2                      str++;                                          
  92   2              }
  93   1      }
  94          
  95          void LCDSetCursor(uint8 x, uint8 y)
  96          {
  97   1              uint8 pos = 0;
  98   1      
  99   1              switch(y)
 100   1              {
 101   2                      case 0:
 102   2                              pos = 0x80 + x;
 103   2                              break;
 104   2                      case 1:
 105   2                              pos = 0x90 + x;
 106   2                              break;
 107   2                      case 2:
 108   2                              pos = 0x88 + x;
 109   2                              break;
 110   2                      case 3:
 111   2                              pos = 0x98 + x;
 112   2                              break;
 113   2                      default:
 114   2                              break;
 115   2              }
 116   1              LCDWriteCmd(pos);
C51 COMPILER V8.08   LCD12864                                                              05/31/2017 12:37:33 PAGE 3   

 117   1      }
 118          
 119          void LCDShowCursor()
 120          {
 121   1              LCDWriteCmd(0x0F);
 122   1      }
 123          
 124          void LCDCancelCursor()
 125          {
 126   1              LCDWriteCmd(0x0C);
 127   1      }
 128          
 129          void LCDClearAll()
 130          {
 131   1              LCDWriteCmd(0x30);
 132   1              LCDWriteCmd(0x01);
 133   1              LCDShowStr(0,0," ",1);
 134   1      }
 135          
 136          void LCDShowImage(uint8* image)
 137          {
 138   1              uint8 i,j;
 139   1      
 140   1              LCDWriteCmd(0x34); //扩充指令集设定关闭绘图显示
 141   1              LCDWriteCmd(0x34);
 142   1              for(i = 0; i < 32; i++){
 143   2                      LCDWriteCmd(0x80 | i); //设置绘图垂直地址
 144   2                      LCDWriteCmd(0x80);
 145   2                      for( j = 0; j < 8; j++)
 146   2                      {
 147   3                              LCDWriteData(*image++);
 148   3                              LCDWriteData(*image++);
 149   3                      }
 150   2              }
 151   1              
 152   1              for(i = 0; i < 32; i++){
 153   2                      LCDWriteCmd(0x80 | i); //设置绘图垂直地址
 154   2                      LCDWriteCmd(0x88);
 155   2                      for( j = 0; j < 8; j++)
 156   2                      {
 157   3                              LCDWriteData(*image++);
 158   3                              LCDWriteData(*image++);
 159   3                      }
 160   2              }       
 161   1              LCDWriteCmd(0x36); //打开绘图显示
 162   1              LCDWriteCmd(0x30);      //进入基本指令操作
 163   1      }
 164          
 165          void LCDDrawArea(uint8 x, uint8 y, uint8* image)//显示16*16图片
 166          {
 167   1              uint8 i;
 168   1      
 169   1              LCDWriteCmd(0x34); //扩充指令集设定关闭绘图显示
 170   1              LCDWriteCmd(0x34);
 171   1      
 172   1              if(y < 2){                      //处于前两行
 173   2                      for(i = 0; i < 16; i++){
 174   3                              LCDWriteCmd((0x80 | y*16)|i); //设置绘图垂直地址
 175   3                              LCDWriteCmd(0x80 | x);//设置绘图水平地址
 176   3      
 177   3                              LCDWriteData(*image++);// 写入一行
 178   3                              LCDWriteData(*image++);
C51 COMPILER V8.08   LCD12864                                                              05/31/2017 12:37:33 PAGE 4   

 179   3                      }
 180   2              }else{                  //处于后两行
 181   2                      for(i = 0; i < 16; i++){
 182   3                              LCDWriteCmd((0x80 | y*16)|i); //设置绘图垂直地址
 183   3                              LCDWriteCmd(0x88 | x);//设置绘图水平地址
 184   3      
 185   3                              LCDWriteData(*image++);// 写入一行
 186   3                              LCDWriteData(*image++);
 187   3                      }
 188   2              }
 189   1      
 190   1              LCDWriteCmd(0x80 | y*16); //归于原点
 191   1              LCDWriteCmd(0x80 | x);
 192   1      
 193   1              LCDWriteCmd(0x36);
 194   1              LCDWriteCmd(0x30);
 195   1      }
 196          
 197          void LCDInitImage()
 198          {
 199   1              uint8 i,j;
 200   1      
 201   1              LCDWriteCmd(0x34); //扩充指令集设定关闭绘图显示
 202   1              LCDWriteCmd(0x34);
 203   1              for(i = 0; i < 32; i++){
 204   2                      LCDWriteCmd(0x80 | i); //设置绘图垂直地址
 205   2                      LCDWriteCmd(0x80);
 206   2                      for( j = 0; j < 8; j++)
 207   2                      {
 208   3                              LCDWriteData(0x00);
 209   3                              LCDWriteData(0x00);
 210   3                      }
 211   2              }
 212   1              
 213   1              for(i = 0; i < 32; i++){
 214   2                      LCDWriteCmd(0x80 | i); //设置绘图垂直地址
 215   2                      LCDWriteCmd(0x88);
 216   2                      for( j = 0; j < 8; j++)
 217   2                      {
 218   3                              LCDWriteData(0x00);
 219   3                              LCDWriteData(0x00);
 220   3                      }
 221   2              }       
 222   1              LCDWriteCmd(0x36);
 223   1              LCDWriteCmd(0x30);              
 224   1      }
 225          
 226          void LCDClearImage(uint8 x, uint8 y)
 227          {
 228   1              uint8 i;
 229   1      
 230   1              LCDWriteCmd(0x34); //扩充指令集设定关闭绘图显示
 231   1              LCDWriteCmd(0x34);
 232   1      
 233   1              if(y < 2){                      //处于前两行
 234   2                      for(i = 0; i < 16; i++){
 235   3                              LCDWriteCmd((0x80 | y*16)|i); //设置绘图垂直地址
 236   3                              LCDWriteCmd(0x80 | x);//设置绘图水平地址
 237   3      
 238   3                              LCDWriteData(0x00);// 写入一行
 239   3                              LCDWriteData(0x00);
 240   3                      }
C51 COMPILER V8.08   LCD12864                                                              05/31/2017 12:37:33 PAGE 5   

 241   2              }else{                  //处于后两行
 242   2                      for(i = 0; i < 16; i++){
 243   3                              LCDWriteCmd((0x80 | y*16)|i); //设置绘图垂直地址
 244   3                              LCDWriteCmd(0x88 | x);//设置绘图水平地址
 245   3      
 246   3                              LCDWriteData(0x00);// 写入一行
 247   3                              LCDWriteData(0x00);
 248   3                      }
 249   2              }
 250   1      
 251   1              LCDWriteCmd(0x80 | y*16); //归于原点
 252   1              LCDWriteCmd(0x80 | x);
 253   1      
 254   1              LCDWriteCmd(0x36);
 255   1              LCDWriteCmd(0x30);      
 256   1      }
 257          
 258          void LCDClearArea(uint8 x, uint8 y)
 259          {
 260   1              uint16 code clearDat[] = {
 261   1                      0xA1A0,0xA1A0,0xA1A0,0xA1A0,0xA1A0,0xA1A0,0xA1A0,0xA1A0,
 262   1              };
 263   1      
 264   1              LCDShowCN(x,y,clearDat,8-x);
 265   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    782    ----
   CONSTANT SIZE    =    146    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
